##JDBC properties 
##spring.datasource.url=jdbc:mysql://localhost:3306/dreamcustomer?useLegacyDatetimeCode=false&serverTimezone=Australia/Sydney&useSSL=false
##spring.datasource.username = root
##spring.datasource.password = Pass123*
#
#spring.h2.console.enabled=true
#spring.datasource.platform=h2
#spring.datasource.url=jdbc:h2:mem:customerManagement
#
#spring.jpa.show-sql = true
## Hibernate ddl auto ( create-drop)
#spring.jpa.hibernate.ddl-auto = update
#
## stripped before adding them to the entity manager)
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.H2Dialect
#
#spring.jpa.hibernate.use-new-id-generator-mappings=true
#
#spring.jpa.properties.hibernate.format_sql=true 
##spring.jpa.properties.hibernate.hbm2ddl.import_files=sql/data_member.sql 
#spring.jpa.properties.javax.persistence.validation.mode=none

spring.datasource.url=jdbc:postgresql://localhost:5432/customerManagement
spring.datasource.username=postgres
spring.datasource.password=root
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.show-sql=true

## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update


